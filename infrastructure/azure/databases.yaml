# See: https://registry.terraform.io/modules/TaitoUnited/databases/azurerm

# NOTE: If you use the additional database privilege modules for managing
# roles and users, you need to define database provider for each database
# in terraform/database-privileges.tf and enable kubernetes_db_proxy_enabled
# in taito-config.sh

databaseBackupVault:
  enabled: false
  location: ${taito_provider_region}
  redundancy: LocallyRedundant
  softDelete: On
  softDeleteRetentionDurationInDays: 30

postgresqlClusters:
  - name: ${postgres_default_name}
    location: ${taito_provider_region}
    version: "16"
    skuName: GP_Standard_D2s_v3
    autoGrowEnabled: true
    # Normal database backup
    backupRetentionDays: 14
    geoRedundantBackupEnabled: true
    # Vault backup schedule in ISO 8601 formatted intervals (R = repeating, P1W = weekly)
    vaultBackupSchedule:
      - R/2024-06-01T02:00:00+00:00/P1W
    # Vault backup retention in ISO 8601 formatted durations (P4M = 4 months)
    vaultBackupRetention: P4M
    publicNetworkAccessEnabled: false
    # authorizedNetworks:
    #   - start: 127.127.127.10
    #     end: 127.127.127.20
    extensions:
      - PGCRYPTO
      - POSTGIS
    adminUsername: ${postgres_default_admin}
    # Privileges: https://registry.terraform.io/modules/TaitoUnited/privileges/postgresql
    # WARNING: Names of roles and users are visible for all database users
    roles:
    users:

mysqlClusters:
  []
  # - name: ${mysql_default_name}
  #   location: ${taito_provider_region}
  #   version: "8.0"
  #   skuName: GP_Standard_D2s_v3
  #   autoGrowEnabled: true
  #   backupRetentionDays: 14
  #   geoRedundantBackupEnabled: true
  #   publicNetworkAccessEnabled: false
  #   # authorizedNetworks:
  #   #   - start: 127.127.127.10
  #   #     end: 127.127.127.20
  #   adminUsername: ${mysql_default_admin}
  #   # Privileges: https://registry.terraform.io/modules/TaitoUnited/privileges/mysql
  #   roles:
  #   users:
